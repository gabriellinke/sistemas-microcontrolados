


ARM Macro Assembler    Page 1 


    1 00000000         ; main.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Prof. Guilherme Peron
    4 00000000         ; 24/08/2020
    5 00000000         ; Este programa espera o usuário apertar a chave USR_SW1
                       .
    6 00000000         ; Caso o usuário pressione a chave, o LED1 piscará a cad
                       a 0,5 segundo.
    7 00000000         
    8 00000000         ; ------------------------------------------------------
                       -------------------------
    9 00000000                 THUMB                        ; Instruções do tip
                                                            o Thumb-2
   10 00000000         ; ------------------------------------------------------
                       -------------------------
   11 00000000         
   12 00000000         ; Declarações EQU - Defines
   13 00000000         ;<NOME>         EQU <VALOR>
   14 00000000         ; ========================
   15 00000000         
   16 00000000         ; ------------------------------------------------------
                       -------------------------
   17 00000000         ; Área de Dados - Declarações de variáveis
   18 00000000                 AREA             DATA, ALIGN=2
   19 00000000         ; Se alguma variável for chamada em outro arquivo
   20 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       riável <var> a 
   21 00000000         ; partir de outro arquivo
   22 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       variável de nome <var>
   23 00000000         ; de <tam> bytes a partir da primeira 
   24 00000000         ; posição da RAM  
   25 00000000         
   26 00000000         ; ------------------------------------------------------
                       -------------------------
   27 00000000         ; Área de Código - Tudo abaixo da diretiva a seguir será
                        armazenado na memória de 
   28 00000000         ;                  código
   29 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   30 00000000         
   31 00000000         ; Se alguma função do arquivo for chamada em outro arqui
                       vo 
   32 00000000                 EXPORT           Start       ; Permite chamar a 
                                                            função Start a part
                                                            ir de 
   33 00000000         ; outro arquivo. No caso startup.s
   34 00000000         
   35 00000000         ; Se chamar alguma função externa 
   36 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma 
   37 00000000         ; função <func>
   38 00000000                 IMPORT           PLL_Init
   39 00000000                 IMPORT           SysTick_Init
   40 00000000                 IMPORT           SysTick_Wait1ms
   41 00000000                 IMPORT           GPIO_Init
   42 00000000                 IMPORT           PortJ_Input
   43 00000000                 IMPORT           Liga_LED
   44 00000000                 IMPORT           Ligar_Display



ARM Macro Assembler    Page 2 


   45 00000000         
   46 00000000         
   47 00000000         ; ------------------------------------------------------
                       -------------------------
   48 00000000         ; Função main()
   49 00000000         Start
   50 00000000 F7FF FFFE       BL               PLL_Init    ;Chama a subrotina 
                                                            para alterar o cloc
                                                            k do microcontrolad
                                                            or para 80MHz
   51 00000004 F7FF FFFE       BL               SysTick_Init
   52 00000008 F7FF FFFE       BL               GPIO_Init   ;Chama a subrotina 
                                                            que inicializa os G
                                                            PIO
   53 0000000C         
   54 0000000C         MainLoop
   55 0000000C F04F 0C01       MOV              R12, #1
   56 00000010 F04F 0B01       MOV              R11, #1
   57 00000014 F04F 0A00       MOV              R10, #0
   58 00000018 F04F 0632       MOV              R6, #50
   59 0000001C F04F 0901       MOV              R9, #1
   60 00000020         
   61 00000020         Atualiza_Display
   62 00000020         ; inteiro d1, resto d2
   63 00000020 F04F 000A       MOV              R0, #10
   64 00000024 FBBA F8F0       UDIV             R8, R10, R0
   65 00000028 FB08 A810       MLS              R8, R8, R0, R10
   66 0000002C F04F 0700       MOV              R7, #0
   67 00000030 F7FF FFFE       BL               Ligar_Display
   68 00000034         
   69 00000034 F04F 000A       MOV              R0, #10
   70 00000038 FBBA F8F0       UDIV             R8, R10, R0
   71 0000003C F04F 0701       MOV              R7, #1
   72 00000040 F7FF FFFE       BL               Ligar_Display
   73 00000044         
   74 00000044         Atualiza_LEDS
   75 00000044 F7FF FFFE       BL               Liga_LED
   76 00000048         
   77 00000048         ;R8 == 2? R12++
   78 00000048         ;R8 == 1? R11*-1
   79 00000048         Atualiza_Input_Chaves
   80 00000048 F7FF FFFE       BL               PortJ_Input ;Chama a subrotina 
                                                            que lê o estado das
                                                             chaves e coloca o 
                                                            resultado em R0
   81 0000004C         Compara_1
   82 0000004C F1B8 0F01       CMP              R8, #1
   83 00000050 D10A            BNE              Compara_2
   84 00000052         
   85 00000052 F44F 70FA       MOV              R0, #500
   86 00000056 B500            PUSH             { LR }
   87 00000058 F7FF FFFE       BL               SysTick_Wait1ms
   88 0000005C F85D EB04       POP              { LR }
   89 00000060         
   90 00000060 F04F 30FF       MOV              R0, #-1
   91 00000064 FB0B FB00       MUL              R11, R0
   92 00000068         Compara_2
   93 00000068 F1B8 0F02       CMP              R8, #2
   94 0000006C D10D            BNE              Contador



ARM Macro Assembler    Page 3 


   95 0000006E         
   96 0000006E F44F 70FA       MOV              R0, #500
   97 00000072 B500            PUSH             { LR }
   98 00000074 F7FF FFFE       BL               SysTick_Wait1ms
   99 00000078 F85D EB04       POP              { LR }
  100 0000007C         
  101 0000007C F10C 0C01       ADD              R12, #1
  102 00000080 F1BC 0F0A       CMP              R12, #10
  103 00000084 D101            BNE              Contador
  104 00000086 F04F 0C01       MOV              R12, #1
  105 0000008A         
  106 0000008A         
  107 0000008A         Contador
  108 0000008A F1A6 0601       SUB              R6, #1
  109 0000008E 2E00            CMP              R6, #0
  110 00000090 D113            BNE              pula
  111 00000092 F04F 0632       MOV              R6, #50
  112 00000096 FB0C F00B       MUL              R0, R12, R11
  113 0000009A 4482            ADD              R10, R0
  114 0000009C         
  115 0000009C         ;(100+x+y)%100
  116 0000009C F10A 0A64       ADD              R10, #100
  117 000000A0 F04F 0064       MOV              R0, #100
  118 000000A4 FBBA F1F0       UDIV             R1, R10, R0
  119 000000A8 FB00 AA11       MLS              R10, R0, R1, R10
  120 000000AC         
  121 000000AC F109 0901       ADD              R9, #1
  122 000000B0 F1B9 0F09       CMP              R9, #9
  123 000000B4 D101            BNE              pula
  124 000000B6 F04F 0901       MOV              R9, #1
  125 000000BA         
  126 000000BA         pula
  127 000000BA         
  128 000000BA E7B1            B                Atualiza_Display
  129 000000BC         
  130 000000BC E7A6            B                MainLoop
  131 000000BE         
  132 000000BE         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
  133 000000BE         ; Fim do Arquivo
  134 000000BE         ; ------------------------------------------------------
                       --------------------------------------------------------
                       ----------- 
  135 000000BE 00 00           ALIGN                        ;Garante que o fim 
                                                            da seção está alinh
                                                            ada 
  136 000000C0                 END                          ;Fim do arquivo
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\main.d -o.\objects\main.o -ID:\Documents\PedroGabriel
SUC\Lab1\RTE -IC:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 -
IC:\Keil_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISIO
N_VERSION SETA 518" --predefine="TM4C1294NCPDT SETA 1" --list=.\listings\main.l
st main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 18 in file main.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 29 in file main.s
   Uses
      None
Comment: .text unused
Atualiza_Display 00000020

Symbol: Atualiza_Display
   Definitions
      At line 61 in file main.s
   Uses
      At line 128 in file main.s
Comment: Atualiza_Display used once
Atualiza_Input_Chaves 00000048

Symbol: Atualiza_Input_Chaves
   Definitions
      At line 79 in file main.s
   Uses
      None
Comment: Atualiza_Input_Chaves unused
Atualiza_LEDS 00000044

Symbol: Atualiza_LEDS
   Definitions
      At line 74 in file main.s
   Uses
      None
Comment: Atualiza_LEDS unused
Compara_1 0000004C

Symbol: Compara_1
   Definitions
      At line 81 in file main.s
   Uses
      None
Comment: Compara_1 unused
Compara_2 00000068

Symbol: Compara_2
   Definitions
      At line 92 in file main.s
   Uses
      At line 83 in file main.s
Comment: Compara_2 used once
Contador 0000008A

Symbol: Contador
   Definitions
      At line 107 in file main.s
   Uses
      At line 94 in file main.s
      At line 103 in file main.s

MainLoop 0000000C




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: MainLoop
   Definitions
      At line 54 in file main.s
   Uses
      At line 130 in file main.s
Comment: MainLoop used once
Start 00000000

Symbol: Start
   Definitions
      At line 49 in file main.s
   Uses
      At line 32 in file main.s
Comment: Start used once
pula 000000BA

Symbol: pula
   Definitions
      At line 126 in file main.s
   Uses
      At line 110 in file main.s
      At line 123 in file main.s

10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 41 in file main.s
   Uses
      At line 52 in file main.s
Comment: GPIO_Init used once
Liga_LED 00000000

Symbol: Liga_LED
   Definitions
      At line 43 in file main.s
   Uses
      At line 75 in file main.s
Comment: Liga_LED used once
Ligar_Display 00000000

Symbol: Ligar_Display
   Definitions
      At line 44 in file main.s
   Uses
      At line 67 in file main.s
      At line 72 in file main.s

PLL_Init 00000000

Symbol: PLL_Init
   Definitions
      At line 38 in file main.s
   Uses
      At line 50 in file main.s
Comment: PLL_Init used once
PortJ_Input 00000000

Symbol: PortJ_Input
   Definitions
      At line 42 in file main.s
   Uses
      At line 80 in file main.s
Comment: PortJ_Input used once
SysTick_Init 00000000

Symbol: SysTick_Init
   Definitions
      At line 39 in file main.s
   Uses
      At line 51 in file main.s
Comment: SysTick_Init used once
SysTick_Wait1ms 00000000

Symbol: SysTick_Wait1ms
   Definitions
      At line 40 in file main.s
   Uses
      At line 87 in file main.s
      At line 98 in file main.s

7 symbols



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

352 symbols in table
